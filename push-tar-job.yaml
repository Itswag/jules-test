kind: Job
apiVersion: batch/v1
metadata:
  name: push-tarball-job
  namespace: default
spec:
  parallelism: 1
  completions: 1
  activeDeadlineSeconds: 3600
  backoffLimit: 1
  template:
    spec:
      containers:
        - name: skopeo-tar-pusher
          image: quay.io/skopeo/skopeo:latest 
          env:
            - name: IMAGE_TAR_URL
              value: "http://example.com/image.tar" # To be configured at runtime
            - name: HARBOR_REGISTRY
              value: "dockerhub.kubekey.local" # To be configured at runtime
            - name: HARBOR_PROJECT
              value: "user/cve" # To be configured at runtime
            - name: HARBOR_IMAGE_NAME
              value: "my-app-final" # To be configured at runtime
            - name: HARBOR_IMAGE_TAG
              value: "v1.2.3" # To be configured at runtime
            - name: HARBOR_USERNAME
              valueFrom:
                secretKeyRef:
                  name: harbor-credentials
                  key: username
            - name: HARBOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: harbor-credentials
                  key: password
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail
              echo "Pushing image tarball from $IMAGE_TAR_URL to Harbor..."
              echo "Downloading image tar from $IMAGE_TAR_URL..."
              # Ensure curl is available in the skopeo image, or use wget
              curl -L -o /tmp/image.tar "$IMAGE_TAR_URL"
              echo "Pushing image tarball to Harbor..."
              skopeo copy \
                --dest-tls-verify=false \
                --dest-creds="${HARBOR_USERNAME}:${HARBOR_PASSWORD}" \
                "docker-archive:/tmp/image.tar" \
                "docker://${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${HARBOR_IMAGE_NAME}:${HARBOR_IMAGE_TAG}"
              echo "Image tarball pushed to Harbor successfully."
          imagePullPolicy: IfNotPresent
          
      restartPolicy: Never
      hostNetwork: true # Kept as per original spec, assess if needed
      # Consider adding imagePullSecrets if images are from private registries
      # imagePullSecrets:
      #   - name: my-registry-secret
